--- 
version: 2.1
orbs:
  aws-cli: circleci/aws-cli@2.0.3
  
commands:
  print_pipeline_id:
    parameters: 
      id: 
        type: string
    steps: 
      - 
        run: "echo << parameters.id >>"
        

jobs: 
#########################################################
  aws-cli-example:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: example
      - run: echo "Run your code here"
      
###################################
  analyze: 
    docker: 
      - 
        image: "circleci/node:13.8.0"
    steps: 
      - 
        run: "echo My pipeline id is << pipeline.id >> and my git branch is << pipeline.git.branch >>."
      - 
        attach_workspace: 
          at: ~/
      - 
        run: "cat ~/output.txt"
      - run:
          name: on error
          command: echo "Hello Error!"
          when: on_fail
########################################################
  build: 
    docker: 
      - 
        image: "cimg/base:2020.01"
    steps: 
      - checkout
      - 
        run: 
          command: "echo $CircleCI_Env_Variable"
          name: "echo an env var that is part of our project"
      - 
        save_cache: 
          key: "v1-my-project-{{ checksum \"project.clj\" }}"
          paths: 
            - ~/.m2
      - 
        run: "echo My pipeline git url is << pipeline.project.git_url >> and project type is << pipeline.project.type>>."
      - 
        run: "echo \"hello world\" > ~/output.txt"
      - 
        persist_to_workspace: 
          paths: 
            - output.txt
          root: ~/
      - run:
          name: on error
          command: echo "Hello Error!"
          when: on_fail
########################################################
  cloudfront-update:
     docker:
       - image: amazon/aws-cli
     steps:
      # Checkout code from git
       - checkout
       - run:
          name: Install dependencies
          command: |
            yum install -y tar gzip curl
            curl -sL https://rpm.nodesource.com/setup_10.x | bash -
            yum install -y nodejs
##############################################################
            
  inventoryjob: 
    docker: 
      - 
        image: "circleci/node:13.8.0"
    steps: 
      - checkout
      - run: "echo My pipeline.git.branch is << pipeline.git.branch >>"
      - run:
          name: on error
          command: echo "Hello Error!"
          when: on_fail
      - run:
          name: Add ansible inventory
          working_directory: ./.circleci/ansible
          command: |
            aws ec2 describe-instances --region us-east-2 --query "Reservations[*].Instances[*].PublicIpAddress" --filters "Name=tag:CICD_EC2,Values=CICD_EC2_1" --output text  >> inventory.txt
            cat inventory.txt 
              
      - persist_to_workspace:
          root: .
          paths:
            - .circleci/ansible/inventory.txt
            
########################################################
  test: 
    docker: 
      - 
        image: "circleci/node:13.8.0"
    steps: 
      - 
        run: "echo My pipeline.git.branch is << pipeline.git.branch >>"
      - print_pipeline_id:
          id: << pipeline.id >>
      - run:
          name: on error
          command: echo "Hello Error!"
          when: on_fail
########################################################

workflows: 
  CICD: 
    jobs: 
      - cloudfront-update
      - 
        inventoryjob:
          requires:
            - cloudfront-update
      - 
        build: 
          requires: 
            - inventoryjob
      - 
        test: 
          requires: 
            - build
      - 
        analyze: 
          requires: 
            - test
